# .github/workflows/deploy-frontend.yml

name: Deploy Frontend to GitHub Pages

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the main branch
  push:
    branches: ['master'] # Or 'master', depending on your default branch name
    paths: # Only run if files change within the frontend directory or this workflow file
      - 'frontend/**'
      - '.github/workflows/deploy-frontend.yml'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Checks out your repository code

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          # Specify the Node.js version needed for your frontend build
          node-version: '18' # ADJUST if you use a different Node.js version
          cache: 'npm' # Enable caching for npm dependencies
          cache-dependency-path: frontend/package-lock.json # Path to your lock file

      - name: Install dependencies
        working-directory: ./frontend # Run commands inside the frontend directory
        run: npm ci # Use 'ci' for cleaner installs in CI environments

      - name: Build static files
        working-directory: ./frontend # Run commands inside the frontend directory
        run: npm run build # Assumes your build script is 'build' in frontend/package.json

      - name: Create CNAME file for custom domain
        # GitHub Pages requires this file in the root of the deployment folder
        # to know which custom domain to use.
        run: echo "universeaty.ca" > frontend/dist/CNAME # ADJUST 'dist' if your build output folder is different!

      - name: Setup Pages
        uses: actions/configure-pages@v4 # Configures GitHub Pages settings for the deployment

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3 # Uploads the built static files artifact
        with:
          # Upload the build output directory from the frontend folder
          path: ./frontend/dist # ADJUST 'dist' if your build output folder is different!

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }} # Sets the deployment environment URL in GitHub
    runs-on: ubuntu-latest
    needs: build # This job depends on the 'build' job completing successfully
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # Deploys the artifact uploaded in the 'build' job